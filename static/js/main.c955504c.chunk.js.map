{"version":3,"sources":["../external \"Cesium\"","components/IconButton.tsx","components/CesiumToolbarButton.tsx","components/Input.tsx","etc/GenerateID.ts","etc/GeoTIFFManager.ts","components/MenuItem.tsx","components/Menu.tsx","components/About.tsx","components/Modal.tsx","components/Checkbox.tsx","components/ModalImagesSelector.tsx","components/LoadingWindow.tsx","components/ConfirmRemovalWindow.tsx","components/ReadingErrorWindow.tsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["module","exports","Cesium","IconButton","props","icon","other","className","fixedWidth","CesiumToolbarButton","Input","isFile","type","onChange","expand","newProps","elementClassName","id","Math","random","Date","now","onInputChange","e","target","input","label","multiple","htmlFor","tilingScheme","GeographicTilingScheme","size","width","this","height","fileEntries","terrainProvider","viewer","imageSelector","loadingWindow","addFile","file","geoTiff","indices","a","min","Infinity","max","mean","pixelCount","rectangle","images","i","getImage","image","projectionParameters","geokeysToProj4","getGeoKeys","proj4projection","proj4","getOrigin","originX","originY","getWidth","getHeight","getResolution","xSize","ySize","zScale","nodata","getGDALNoData","projPoints","rightX","bottomY","point","push","forward","boundingRect","Rectangle","fromDegrees","bbox","polygon","union","readRasters","constructor","imageData","y","window","rasters","rasterLength","length","x","pixel","raster","set","heightMultiplier","name","getTerrainData","tileX","tileY","level","tileRect","tileXYToRectangle","west","east","north","south","toDeg","PI","topLeftX","topLeftY","bottomRightX","bottomRightY","degInPxX","abs","degInPxY","buffer","Float32Array","entry","img","simpleIntersection","globalX","globalY","inverse","projX","projY","imageX","floor","imageY","removeFile","setHeightMultiplier","fileName","multiplier","entries","CustomHeightmapTerrainProvider","callback","MenuItemDataEntry","value","MenuItem","useState","isOpened","setIsOpened","data","faTrash","onClick","onDelete","faExpand","manager","scene","camera","flyTo","destination","faInfo","defaultValue","step","onHeightMultiplierChange","Menu","menuRef","useDetectClickOutside","onTriggered","setMenuOpen","menuOpen","openFiles","setOpenFiles","addFiles","files","newNames","newFiles","errors","errorOccurred","fromBlob","getImageCount","imageCount","getImagesToUse","show","f","message","console","log","hide","errorWindow","deleteFile","confirmWindow","confirm","isYes","filter","ref","faBars","accept","map","About","href","Modal","onClose","isOk","setIsOpen","propName","isOpen","header","children","undefined","enableCancel","cancelText","enableOk","okText","Checkbox","isSelected","setIsSelected","useEffect","newSelected","faCheck","numbers","toString","ModalImagesSelector","userFinishedSelection","setAll","checkboxValues","state","setState","parseMask","Set","ranges","split","maxValue","range","rangeArr","firstStr","lastStr","trim","char","indexOf","first","parseInt","last","isNaN","add","onMaskInput","maskText","isInputMaskValid","onOk","useMask","Promise","resolve","setTimeout","onSelect","placeholder","React","Component","loadingTexts","LoadingWindow","round","ConfirmRemovalWindow","onConfirm","onCancel","ReadingErrorWindow","fileErrors","newFileErrors","key","hasOwnProperty","defaultAccessToken","dummyContainer","document","createElement","App","cesiumRef","useRef","current","cesiumElement","globe","scratchNormal","previousPosition","previousDirection","previousUp","previousRight","postUpdate","addEventListener","normal","ellipsoid","geodeticSurfaceNormal","position","dot","direction","clone","up","right","toolbar","container","getElementsByClassName","menuContainer","appendChild","menu","ReactDOM","render","helpContainer","aboutWrapper","about","process","full","timeline","sceneModePicker","animation","creditContainer","terrainProviderViewModels","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ua","userAgent","toLowerCase","isMobile","device","body","classList","StrictMode","getElementById","URL","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c955504c.chunk.js","sourcesContent":["module.exports = Cesium;","import \"./IconButton.sass\";\nimport React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\ninterface IconButtonProps extends React.AllHTMLAttributes<HTMLDivElement> {\n\ticon: any\n}\n\nexport default function IconButton (props: IconButtonProps) {\n\tlet {icon, ...other} = props;\n\treturn (\n\t\t<div {...other as React.AllHTMLAttributes<HTMLDivElement>} className={\"button icon-button \" + (props.className || \"\")}>\n\t\t\t<FontAwesomeIcon icon={icon} fixedWidth={true} />\n\t\t</div>\n\t);\n}","import React from \"react\";\nimport IconButton from \"./IconButton\";\n\n/**\n * A toolbar button. Pass an SVG icon as an only child (see example).\n *\n * @example\n *\n * import React from \"react\"; // React imports\n * import CesiumToolbarButton from \"./CesiumToolbarButton\"; // Import this button\n * import {ReactComponent as MyIcon} from \"./icon.svg\"; // Import SVG icon\n *\n * export default function MyComponent () {\n *     return (\n *         <CesiumToolbarButton onClick={() => {setMenuOpen(!menuOpen);}}>\n *             <MenuIcon className=\"cesium-svgPath-svg\"/>\n *         </CesiumToolbarButton>\n *     )\n * }\n *\n * @param props HTMlButtonElement properties\n * @constructor\n */\nexport default function CesiumToolbarButton(props: any) {\n\treturn (\n\t\t<IconButton icon={props.icon} {...props} className={\"cesium-button cesium-toolbar-button \" + (props.className || \"\")} />\n\t)\n}","import React, {FormEvent, Fragment} from \"react\";\nimport \"./Input.sass\";\nimport generateID from \"../etc/GenerateID\";\n\ninterface InputProps extends React.AllHTMLAttributes<HTMLInputElement> {\n\texpand?: boolean\n}\n\nexport default function Input(props: InputProps) {\n\n\tconst isFile = props.type === \"file\";\n\tconst {expand, onChange, ...newProps} = props;\n\tconst elementClassName = `button ${props.expand ? \"button-expanded\" : \"\"}`;\n\tconst id = generateID();\n\n\tlet onInputChange = isFile ? (e: FormEvent<HTMLInputElement>) => {\n\t\tif (onChange)\n\t\t\tonChange(e);\n\n\t\t// Clear file input\n\t\t// @ts-ignore\n\t\te.target.type = \"\";\n\t\t// @ts-ignore\n\t\te.target.type = \"file\";\n\t} : onChange;\n\n\tlet input = (<input {...newProps} className={(isFile ? \"hidden\" : elementClassName) + \" \" + (props.className || \"\")} id={id} onChange={onInputChange} />);\n\n\tif (!isFile)\n\t\treturn input;\n\n\tconst label = props.label || `Select ${(input.props.multiple) ? \"files\" : \"file\"}...`;\n\treturn (\n\t\t<Fragment>\n\t\t\t{input}\n\t\t\t<label className={elementClassName} htmlFor={id}>{label}</label>\n\t\t</Fragment>\n\t);\n}","/**\n * @return Unique ID for your elements\n */\nexport default function generateID () {\n\treturn \"_\" + Math.random() + \"_\" + Date.now();\n}","import * as geokeysToProj4 from \"geotiff-geokeys-to-proj4\";\nimport proj4 from \"proj4\";\nimport {Cartesian3, Color, CustomHeightmapTerrainProvider, GeographicTilingScheme, Rectangle, Viewer} from \"cesium\";\nimport {polygon} from \"@turf/helpers\";\nimport {ModalImagesSelector} from \"../components/ModalImagesSelector\";\nimport LoadingWindow from \"../components/LoadingWindow\";\nimport bbox from \"@turf/bbox\";\n\nconst tilingScheme = new GeographicTilingScheme();\n\n/**\n * File statistics and bounding rectangle\n */\nexport interface FileData {\n\tname: string,\n\tmin: number,\n\tmax: number,\n\tmean: number,\n\n\t/**\n\t * Bounding rectangle of all images in this file. Use it to zoom to the file.\n\t */\n\trectangle: Rectangle\n}\n\ninterface FileEntries {\n\t[id: string]: {\n\t\tproj4projection: proj4.Converter,\n\t\toriginX: number, originY: number,\n\t\timageData: Array<number>,\n\t\tboundingRect: Rectangle,\n\t\trightX: number, bottomY: number, width: number, height: number,\n\t\theightMultiplier: number,\n\t}[]\n}\n\n/**\n * Manages GeoTIFF files. Use its exported instance.\n */\nclass GeoTIFFManager {\n\tprivate readonly size = 32;\n\tprivate readonly width = this.size;\n\tprivate readonly height = this.size;\n\tprivate readonly fileEntries: FileEntries;\n\tpublic readonly terrainProvider: CustomHeightmapTerrainProvider;\n\tpublic viewer: Viewer | undefined\n\tpublic imageSelector: ModalImagesSelector | null = null;\n\tpublic loadingWindow: LoadingWindow | null = null;\n\n\tconstructor() {\n\t\tthis.fileEntries = {};\n\t\tthis.terrainProvider = new CustomHeightmapTerrainProvider({\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\ttilingScheme,\n\t\t\tcallback: (x, y, level) => {\n\t\t\t\treturn this.getTerrainData(x, y, level);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Reads the file and adds it to the {@link GeoTIFFManager#fileEntries}\n\t * @param file A file to add\n\t * @param geoTiff GeoTIFF instance\n\t * @param indices Image indices to add\n\t * @throws {Error<\"not_georeferenced\">} When image is not georeferenced\n\t * @return Data to pass to the menu item\n\t */\n\taddFile = async (file: File, geoTiff: any, indices: Iterable<number>): Promise<FileData> => {\n\n\t\tlet min = +Infinity,\n\t\t\tmax = -Infinity,\n\t\t\tmean = 0,\n\t\t\tpixelCount = 0,\n\t\t\trectangle: Rectangle | null = null,\n\t\t\timages = [];\n\n\t\tfor (let i of indices) {\n\t\t\tconst image = await geoTiff.getImage(i);\n\n\t\t\tconst projectionParameters = geokeysToProj4.toProj4(image.getGeoKeys()), // Convert geokeys to proj4 string\n\t\t\t\tproj4projection = proj4(projectionParameters.proj4, \"WGS84\"); // Get projection to WGS84\n\n\t\t\t// Get dimensions to determine pixel position in source CRS\n\t\t\tlet [originX, originY] = image.getOrigin(),\n\t\t\t\twidth = image.getWidth(),\n\t\t\t\theight = image.getHeight(),\n\t\t\t\t[xSize, ySize, zScale] = image.getResolution(),\n\t\t\t\tnodata = image.getGDALNoData();\n\n\t\t\t// Fix missing Z scale\n\t\t\tif (zScale === 0)\n\t\t\t\tzScale = 1;\n\n\t\t\t// Rest of the coordinates for the top and left sides. Needed to determine pixel position.\n\t\t\tconst rightX = originX + width * xSize, bottomY = originY + height * ySize;\n\n\t\t\t// Build bounding rect, image polygon and data for further math\n\n\t\t\t// Original image rectangle\n\t\t\tconst origPoints = [\n\t\t\t\t[originX, originY],\n\t\t\t\t[rightX, originY],\n\t\t\t\t[originX + width * xSize, originY + height * ySize],\n\t\t\t\t[originX, bottomY],\n\t\t\t\t[originX, originY],\n\t\t\t];\n\n\t\t\t// Projected image rectangle\n\t\t\tlet projPoints = [];\n\t\t\tfor (let point of origPoints)\n\t\t\t\tprojPoints.push(proj4projection.forward(point));\n\n\t\t\t// Bounding rect to detect whether image should be read later\n\t\t\tconst boundingRect = Rectangle.fromDegrees(...bbox(polygon([projPoints])));\n\n\t\t\tif (rectangle === null)\n\t\t\t\trectangle = boundingRect;\n\t\t\telse\n\t\t\t\tRectangle.union(rectangle, boundingRect, rectangle);\n\n\t\t\t// Output useful data and show image outline in dev mode.\n\t\t\tif (process.env.NODE_ENV !== \"production\") {\n\t\t\t\tconsole.log(projectionParameters);\n\n\t\t\t\tconst pts = [...projPoints.slice(0, projPoints.length - 1)];\n\t\t\t\tconst newPts = [];\n\t\t\t\tfor (let pt of pts) {\n\t\t\t\t\tfor (let c of pt)\n\t\t\t\t\t\tnewPts.push(c);\n\t\t\t\t}\n\n\t\t\t\tthis.viewer?.entities.add({\n\t\t\t\t\tpolygon: {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\thierarchy: Cartesian3.fromDegreesArray(newPts),\n\t\t\t\t\t\theight: 1000,\n\t\t\t\t\t\tmaterial: Color.RED.withAlpha(0.5),\n\t\t\t\t\t\toutline: true,\n\t\t\t\t\t\toutlineColor: Color.RED\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Read image and get optimal TypedArray instance to save some RAM\n\t\t\tconst imageData = new ((await image.readRasters([0, 1, 0, 1]))[0]).constructor(width * height);\n\n\t\t\t// Convert image to grayscale and collect statistics\n\t\t\tfor (let y = 0; y < height; y++) {\n\t\t\t\t// Read one row of pixels. Easier to deal with coordinates, takes less RAM.\n\t\t\t\tconst rasters = await image.readRasters({window: [0, y, width, y + 1]});\n\t\t\t\tlet rasterLength = rasters[0].length;\n\n\t\t\t\tfor (let x = 0; x < rasterLength; x++) {\n\t\t\t\t\t// Convert pixel to grayscale\n\t\t\t\t\tlet pixel = 0;\n\t\t\t\t\tfor (let raster of rasters)\n\t\t\t\t\t\tpixel += raster[x];\n\t\t\t\t\tpixel = (pixel === nodata) ? 0 : pixel / rasters.length;\n\t\t\t\t\timageData.set([pixel], y * width + x);\n\n\t\t\t\t\t// Calculate statistics\n\t\t\t\t\tif (pixel < min)\n\t\t\t\t\t\tmin = pixel;\n\t\t\t\t\tif (pixel > max)\n\t\t\t\t\t\tmax = pixel;\n\t\t\t\t\tmean += pixel;\n\n\t\t\t\t\tpixelCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timages.push({\n\t\t\t\tproj4projection,\n\t\t\t\timageData,\n\t\t\t\tboundingRect,\n\t\t\t\trightX,\n\t\t\t\tbottomY,\n\t\t\t\toriginX,\n\t\t\t\toriginY,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\theightMultiplier: 1,\n\t\t\t});\n\n\t\t}\n\n\t\tthis.fileEntries[file.name] = images;\n\t\treturn {\n\t\t\tname: file.name,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\tmean: mean / pixelCount,\n\t\t\trectangle: rectangle as Rectangle,\n\t\t}\n\t}\n\n\tgetTerrainData = (tileX: number, tileY: number, level: number): Float32Array => {\n\t\tconst tileRect = tilingScheme.tileXYToRectangle(tileX, tileY, level); // Tile rectangle to detect whether image should be read\n\n\t\t// Get tile rect coordinates for coordinate conversion and to find how much degrees is in tile pixel for X and Y\n\t\tconst {west, east, north, south} = tileRect,\n\t\t\ttoDeg = 180 / Math.PI,\n\t\t\ttopLeftX = west * toDeg,\n\t\t\ttopLeftY = north * toDeg,\n\t\t\tbottomRightX = east * toDeg,\n\t\t\tbottomRightY = south * toDeg,\n\t\t\tdegInPxX = Math.abs(bottomRightX - topLeftX) / this.width,\n\t\t\tdegInPxY = Math.abs(bottomRightY - topLeftY) / this.height,\n\t\t\tbuffer = new Float32Array(this.width * this.height); // Buffer to return to Cesium\n\n\t\t// For each GeoTIFF file and each image in it\n\t\tfor (let id in this.fileEntries) {\n\t\t\tlet entry = this.fileEntries[id];\n\n\t\t\tfor (let img of entry) {\n\t\t\t\t// Optimize performance by not reading files outside of tile\n\t\t\t\tif (!Rectangle.simpleIntersection(tileRect, img.boundingRect))\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Read current image\n\t\t\t\tfor (let x = 0; x < this.width; x++) {\n\t\t\t\t\tfor (let y = 0; y < this.height; y++) {\n\n\t\t\t\t\t\t// Convert pixel position to lon lat and project it to the image CRS\n\t\t\t\t\t\tconst globalX = topLeftX + x * degInPxX, globalY = topLeftY - y * degInPxY,\n\t\t\t\t\t\t\t[projX, projY] = img.proj4projection.inverse([globalX, globalY]);\n\n\t\t\t\t\t\t// Get pixel position by finding at which % of the side lies current position. Then multiply it by image width/height to convert % to px.\n\t\t\t\t\t\tconst imageX = Math.floor(img.width * (projX - img.originX) / (img.rightX - img.originX)),\n\t\t\t\t\t\t\timageY = Math.floor(img.height * (projY - img.originY) / (img.bottomY - img.originY));\n\n\t\t\t\t\t\t// Some debug data in case something will go wrong\n\t\t\t\t\t\t// if (level === 12 && tileX === 2635 && tileY === 944)\n\t\t\t\t\t\t// \tconsole.log(imageX, imageY, projX, projY);\n\n\t\t\t\t\t\t// Don't add points outside of image\n\t\t\t\t\t\tif (imageX < 0 || imageX >= img.width || imageY < 0 || imageY >= img.height)\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t// Set pixel value. Both Cesium and our program uses row-major order.\n\t\t\t\t\t\tbuffer.set([img.imageData[imageY * img.width + imageX] * img.heightMultiplier], y * this.width + x);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn buffer;\n\t}\n\n\t/**\n\t * Removes a file with given name from the manager\n\t * @param name Filename to remove\n\t */\n\tremoveFile = (name: string) => {\n\t\tdelete this.fileEntries[name];\n\t}\n\n\t/**\n\t * Sets a height multiplier for a given file name\n\t * @param fileName\n\t * @param multiplier\n\t */\n\tsetHeightMultiplier = (fileName: string, multiplier: number) => {\n\t\tif (multiplier < 1)\n\t\t\tmultiplier = 1;\n\t\telse if (multiplier > 1000)\n\t\t\tmultiplier = 1000;\n\n\t\tlet entries = this.fileEntries[fileName];\n\t\tfor (let entry of entries)\n\t\t\tentry.heightMultiplier = multiplier;\n\t}\n}\n\n/**\n * Manager singleton\n */\nexport default new GeoTIFFManager();","import React, {useState} from \"react\";\nimport \"./MenuItem.sass\";\nimport manager, {FileData} from \"../etc/GeoTIFFManager\";\nimport {Collapse} from \"react-collapse\";\nimport {faTrash, faInfo, faExpand} from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"./IconButton\";\nimport Input from \"./Input\";\n\ninterface MenuItemProps {\n\tdata: FileData,\n\tonDelete: (name: string) => void,\n\tonHeightMultiplierChange: (fileName: string, multiplier: number) => void\n}\n\ninterface MenuItemDataEntryProps {\n\tlabel: string,\n\tvalue: any\n}\n\nfunction MenuItemDataEntry(props: MenuItemDataEntryProps) {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"menu-item-data-entry\">\n\t\t\t<div className=\"menu-item-data-entry-label\">{props.label}:</div>\n\t\t\t<div className=\"menu-item-data-entry-value\">{props.value}</div>\n\t\t</div>\n\t)\n}\n\nexport default function MenuItem(props: MenuItemProps) {\n\n\tlet [isOpened, setIsOpened] = useState(false);\n\n\tlet onZoom = () => {\n\t\tmanager.viewer?.scene.camera.flyTo({\n\t\t\tdestination: props.data.rectangle\n\t\t});\n\t}\n\n\treturn (\n\t\t<div className=\"menu-item\">\n\t\t\t<div className=\"display-row menu-item-row\">\n\t\t\t\t<div className=\"shortened-text menu-item-label\">{props.data.name}</div>\n\t\t\t\t<IconButton icon={faTrash} onClick={() => props.onDelete(props.data.name)} />\n\t\t\t\t<IconButton icon={faExpand} onClick={onZoom} />\n\t\t\t\t<IconButton icon={faInfo} onClick={() => setIsOpened(!isOpened)} />\n\t\t\t</div>\n\t\t\t<Collapse\n\t\t\t\tisOpened={isOpened}>\n\t\t\t\t<div className=\"menu-item-data\">\n\t\t\t\t\t<MenuItemDataEntry label=\"Min\" value={props.data.min}/>\n\t\t\t\t\t<MenuItemDataEntry label=\"Max\" value={props.data.max}/>\n\t\t\t\t\t<MenuItemDataEntry label=\"Mean\" value={props.data.mean}/>\n\t\t\t\t\t<p>Sometimes heights might be so small so they make DEM almost invisible. Multiply heights by following value to see the DEM better:</p>\n\t\t\t\t\t<Input type=\"number\" defaultValue={1} min={1} max={1000} step={100} expand={true} onChange={(e) => {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tprops.onHeightMultiplierChange(props.data.name, e.target.value);\n\t\t\t\t\t}} />\n\t\t\t\t</div>\n\t\t\t</Collapse>\n\t\t</div>\n\t);\n\n}","import \"./Menu.sass\";\nimport React, {ChangeEvent, useState} from \"react\";\nimport {useDetectClickOutside} from \"react-detect-click-outside\";\nimport CesiumToolbarButton from \"./CesiumToolbarButton\";\nimport Input from \"./Input\";\nimport MenuItem from \"./MenuItem\";\nimport manager, {FileData} from \"../etc/GeoTIFFManager\";\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\";\nimport {fromBlob} from \"geotiff\";\nimport ConfirmRemovalWindow from \"./ConfirmRemovalWindow\";\nimport ReadingErrorWindow\n, {ReadingErrors} from \"./ReadingErrorWindow\";\n\ninterface MenuProps {\n\tconfirmWindow: ConfirmRemovalWindow,\n\terrorWindow: ReadingErrorWindow,\n}\n\nexport default function Menu(props: MenuProps) {\n\tlet menuRef = useDetectClickOutside({onTriggered: () => setMenuOpen(false)});\n\n\tlet [menuOpen, setMenuOpen] = useState(false);\n\tlet [openFiles, setOpenFiles] = useState<FileData[]>([]);\n\n\tlet addFiles = async (e: ChangeEvent<HTMLInputElement>) => {\n\t\tif (!e.target.files || e.target.files.length === 0)\n\t\t\treturn;\n\n\t\tlet newNames: FileData[] = [], newFiles: {file: File, geoTiff: any, indices: Iterable<number>}[] = [];\n\n\t\t// Get images to add in case multi-image file\n\n\t\tlet errors: ReadingErrors = {}, errorOccurred = false;\n\n\t\tfor (let file of e.target.files) {\n\t\t\tlet geoTiff\n\t\t\ttry {\n\t\t\t\tgeoTiff = await fromBlob(file);\n\t\t\t} catch (e) {\n\t\t\t\terrorOccurred = true;\n\t\t\t\terrors[file.name] = \"file is not valid TIFF image\";\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet imageCount = await geoTiff.getImageCount();\n\n\t\t\tlet indices;\n\t\t\tif (imageCount > 1)\n\t\t\t\tindices = await manager.imageSelector?.getImagesToUse(imageCount, file.name);\n\n\t\t\t// It won't happen in case above, but leave it here just to make TS shut up\n\t\t\tif (!indices)\n\t\t\t\tindices = [0];\n\n\t\t\tnewFiles.push({file, geoTiff, indices});\n\t\t}\n\n\t\tmanager.loadingWindow?.show();\n\n\t\t// Actually add files\n\t\tfor (let f of newFiles) {\n\t\t\ttry {\n\t\t\t\tlet data = await manager.addFile(f.file, f.geoTiff, f.indices);\n\t\t\t\tnewNames.push(data);\n\t\t\t} catch (e: any) {\n\t\t\t\terrorOccurred = true;\n\t\t\t\tif (e.message === \"not_georeferenced\")\n\t\t\t\t\terrors[f.file.name] = \"file is not georeferenced\";\n\t\t\t\telse\n\t\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\n\t\tsetOpenFiles(openFiles => [...openFiles, ...newNames]);\n\t\tmanager.loadingWindow?.hide();\n\n\t\tif (errorOccurred)\n\t\t\tprops.errorWindow.show(errors);\n\t}\n\n\tlet deleteFile = (name: string) => {\n\t\tprops.confirmWindow.confirm(name, (isYes) => {\n\t\t\tif (!isYes)\n\t\t\t\treturn;\n\t\t\tmanager.removeFile(name);\n\t\t\tsetOpenFiles(openFiles.filter(value => value.name !== name));\n\t\t});\n\t}\n\n\tlet setHeightMultiplier = (fileName: string, multiplier: number) => {\n\t\tmanager.setHeightMultiplier(fileName, multiplier);\n\t}\n\n\treturn (\n\t\t<div className=\"menu-wrapper\" ref={menuRef}>\n\t\t\t<CesiumToolbarButton icon={faBars} className=\"menu-button\" onClick={() => setMenuOpen(!menuOpen)} />\n\t\t\t<div className={`cesium-baseLayerPicker-dropDown ${menuOpen ? \"cesium-baseLayerPicker-dropDown-visible\" : \"\"}`} >\n\n\t\t\t\t<Input type=\"file\" multiple={true} accept=\".tiff, .tif, .geotiff, .geotif\" label=\"Add GeoTIFFs!\" expand={true} onChange={addFiles}/>\n\n\t\t\t\t{openFiles.map((data, i) => (\n\t\t\t\t\t<MenuItem data={data} onDelete={deleteFile} onHeightMultiplierChange={setHeightMultiplier} key={i}/>\n\t\t\t\t))}\n\n\t\t\t</div>\n\t\t</div>\n\t);\n\n}","import \"./About.sass\";\n\nexport default function About() {\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<div className=\"about-header\"><b>About this app</b></div>\n\t\t\t<div>\n\t\t\t\tThis app enables you to view GeoTIFF Digital Elevation Models in 3D.\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tIt's different from other apps because it uses <a href=\"https://github.com/matafokka/geotiff-geokeys-to-proj4\">this library</a> which allows to support almost any projection which other apps doesn't do (for now). In fact, this app is demo for that library.\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tLove the idea? Check out <a href=\"https://github.com/matafokka/geotiff-3d-dem-viewer\">the source code</a>!\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React\n\tfrom \"react\";\nimport Input\n\tfrom \"./Input\";\nimport \"./Modal.sass\";\n\ninterface ModalProps extends React.ComponentProps<any> {\n\theader?: string,\n\tenableOk?: boolean,\n\tenableCancel?: boolean,\n\tcancelText?: string,\n\tokText?: string,\n\tonCancel?: () => void,\n\tonOk?: () => void,\n\tisOpen: boolean,\n\tsetIsOpen?: (isOpen: boolean) => void,\n\tclassName?: string,\n}\n\nexport default function Modal(props: ModalProps) {\n\tlet onClose = (isOk: boolean) => {\n\t\tif (props.setIsOpen)\n\t\t\tprops.setIsOpen(false);\n\n\t\tconst propName = \"on\" + (isOk ? \"Ok\" : \"Cancel\");\n\t\tif (props[propName])\n\t\t\tprops[propName]();\n\t}\n\n\treturn (\n\t\t<div className={\"modal-backdrop \" + (props.isOpen ? \"\" : \"modal-hidden\")}>\n\t\t\t<div className=\"cesium-baseLayerPicker-dropDown cesium-baseLayerPicker-dropDown-visible modal\">\n\t\t\t\t{props.header ? <div className=\"shortened-text modal-header\">{props.header}</div> : null}\n\t\t\t\t<div className={\"modal-content \" + (props.className || \"\")}>\n\t\t\t\t\t{props.children}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"modal-buttons\">\n\t\t\t\t\t<div className=\"modal-buttons-wrapper\">\n\t\t\t\t\t\t{(props.enableCancel === undefined || props.enableCancel) ?\n\t\t\t\t\t\t\t<Input type=\"button\" value={props.cancelText ? props.cancelText : \"Cancel\"} onClick={() => onClose(false)} />\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t{(props.enableOk === undefined || props.enableOk) ?\n\t\t\t\t\t\t\t<Input type=\"button\" value={props.okText ? props.okText : \"OK\"} onClick={() => onClose(true)} />\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}","import React, {useEffect, useState} from \"react\";\nimport \"./Checkbox.sass\";\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"./IconButton\";\n\ninterface CheckboxProps {\n\tlabel: string,\n\tisSelected?: boolean\n\tonClick?: (isSelected: boolean) => void\n}\n\nexport default function Checkbox(props: CheckboxProps) {\n\tlet [isSelected, setIsSelected] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetIsSelected(!!props.isSelected)\n\t}, [props.isSelected])\n\n\tlet onClick = () => {\n\t\tconst newSelected = !isSelected;\n\t\tsetIsSelected(newSelected);\n\t\tif (props.onClick)\n\t\t\tprops.onClick(newSelected);\n\t}\n\n\treturn (\n\t\t<div className=\"display-row checkbox-container\" onClick={onClick}>\n\t\t\t<IconButton icon={faCheck} className={\"checkbox-icon-container \" + (isSelected ? \"\" : \"not-selected\")}/>\n\t\t\t<div className=\"checkbox-label\">{props.label}</div>\n\t\t</div>\n\t)\n}","import Modal from \"./Modal\";\nimport React, {FormEvent} from \"react\";\nimport Checkbox from \"./Checkbox\";\nimport Input from \"./Input\";\nimport {Tab, TabList, TabPanel, Tabs} from \"react-tabs\";\nimport \"./ModalImageSelector.sass\";\n\ninterface ModalImagesSelectorState {\n\tcheckboxValues: boolean[]\n\tisOpen: boolean,\n\tfileName: string,\n\tmaskText: string,\n\tisInputMaskValid: boolean,\n\tuseMask: boolean,\n\tenableOk: boolean\n}\n\n\n/**\n * Allowed characters in mask\n */\nconst numbers: string[] = [];\nfor (let i = 0; i <= 9; i++)\n\tnumbers.push(i.toString());\n\nexport class ModalImagesSelector extends React.Component<{}, ModalImagesSelectorState> {\n\n\tprivate userFinishedSelection: boolean = false;\n\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcheckboxValues: [],\n\t\t\tisOpen: false,\n\t\t\tfileName: \"\",\n\t\t\tmaskText: \"\",\n\t\t\tisInputMaskValid: true,\n\t\t\tuseMask: false,\n\t\t\tenableOk: true,\n\t\t}\n\t}\n\n\tasync getImagesToUse(imageCount: number, fileName: string): Promise<Iterable<number>> {\n\t\tlet checkboxValues: boolean[] = [];\n\t\tfor (let i = 0; i < imageCount; i++)\n\t\t\tcheckboxValues.push(true);\n\n\t\tthis.setState({\n\t\t\tfileName, checkboxValues,\n\t\t\tisOpen: true\n\t\t});\n\n\t\twhile (!this.userFinishedSelection)\n\t\t\tawait new Promise(resolve => {\n\t\t\t\tsetTimeout(resolve, 0);\n\t\t\t});\n\n\t\tthis.userFinishedSelection = false;\n\n\t\tif (this.state.useMask) {\n\t\t\treturn this.parseMask(this.state.maskText) as Set<number>;\n\t\t}\n\n\t\tlet images = [];\n\t\tfor (let i = 0; i < this.state.checkboxValues.length; i++) {\n\t\t\tif (this.state.checkboxValues[i])\n\t\t\t\timages.push(i);\n\t\t}\n\n\t\treturn images;\n\t}\n\n\tsetAll = (isSelected: boolean) => {\n\t\tlet checkboxValues = this.state.checkboxValues.map(() => isSelected)\n\t\tthis.setState({checkboxValues});\n\t}\n\n\tparseMask = (value: string): Set<number> | null => {\n\t\tlet indices = new Set<number>(), ranges = value.split(\",\"), maxValue = this.state.checkboxValues.length - 1;\n\n\t\tfor (let range of ranges) {\n\t\t\tif (range[range.length - 1] === \"-\")\n\t\t\t\treturn null;\n\n\t\t\tlet rangeArr = range.split(\"-\");\n\n\t\t\tif (rangeArr.length > 2)\n\t\t\t\treturn null;\n\n\t\t\tlet [firstStr, lastStr] = rangeArr;\n\t\t\tfirstStr = firstStr.trim();\n\n\t\t\tif (!lastStr)\n\t\t\t\tlastStr = \"\";\n\t\t\telse\n\t\t\t\tlastStr = lastStr.trim();\n\n\t\t\tfor (let char of firstStr + lastStr) {\n\t\t\t\tif (numbers.indexOf(char) === -1)\n\t\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet first = parseInt(firstStr), last = parseInt(lastStr);\n\n\t\t\tif (isNaN(first) || (lastStr !== \"\" && isNaN(last)) || first > last)\n\t\t\t\treturn null;\n\n\t\t\tfirst--;\n\t\t\tif (isNaN(last))\n\t\t\t\tlast = first;\n\t\t\telse\n\t\t\t\tlast--;\n\n\t\t\tif (first > maxValue || last > maxValue || first <= -1)\n\t\t\t\treturn null;\n\n\t\t\tfor (let i = first; i <= last; i++)\n\t\t\t\tindices.add(i);\n\t\t}\n\t\treturn indices;\n\t}\n\n\tonMaskInput = (e: FormEvent<HTMLInputElement>) => {\n\t\t// @ts-ignore\n\t\tlet maskText = e.target.value;\n\t\tlet isInputMaskValid = (this.parseMask(maskText) !== null);\n\t\tlet enableOk = isInputMaskValid && maskText.trim() !== \"\";\n\t\tthis.setState({isInputMaskValid, maskText, enableOk});\n\t}\n\n\tonOk = () => {\n\t\tif (this.state.useMask && !this.state.enableOk)\n\t\t\treturn;\n\n\t\tthis.userFinishedSelection = true;\n\t\tthis.setState({isOpen: false});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tisOpen={this.state.isOpen}\n\t\t\t\tonOk={this.onOk}\n\t\t\t\tenableCancel={false}\n\t\t\t\theader={`Images for file \"${this.state.fileName}\"`}\n\t\t\t\tclassName=\"image-selector\"\n\t\t\t>\n\t\t\t\t<div className=\"image-selector-description\">\n\t\t\t\t\t<p>File \"{this.state.fileName}\" contains multiple images. These images might overlap. In this case, last overlapping image will take precedence.</p>\n\n\t\t\t\t\t<p>Please, select images to display by checking boxes or by using mask.</p>\n\t\t\t\t</div>\n\t\t\t\t<Tabs onSelect={(i) => this.setState({useMask: i === 1})}>\n\t\t\t\t\t<TabList>\n\t\t\t\t\t\t<Tab className=\"button\">Use boxes</Tab>\n\t\t\t\t\t\t<Tab className=\"button\">Use mask</Tab>\n\t\t\t\t\t</TabList>\n\n\t\t\t\t\t<TabPanel>\n\n\t\t\t\t\t\t<div className=\"display-row image-selector-buttons\">\n\t\t\t\t\t\t\t<Input type=\"button\" expand={true} value=\"Select All\" onClick={() => this.setAll(true)}/>\n\t\t\t\t\t\t\t<Input type=\"button\" value=\"Deselect All\" onClick={() =>  this.setAll(false)}/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"display-row image-selector-checkboxes\">\n\t\t\t\t\t\t\t{this.state.checkboxValues.map((value, i) => (\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tlabel={\"Image \" + (i + 1)}\n\t\t\t\t\t\t\t\t\tonClick={isSelected => {\n\t\t\t\t\t\t\t\t\t\tlet checkboxValues = [...this.state.checkboxValues];\n\t\t\t\t\t\t\t\t\t\tcheckboxValues[i] = isSelected;\n\t\t\t\t\t\t\t\t\t\tthis.setState({checkboxValues});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tisSelected={value}\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TabPanel>\n\n\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>Use image number to select it. Separate images by comma. Use minus symbol (-) to select range of images.</p>\n\t\t\t\t\t\t\t<p>For example, select images 1, 2, from 4 to 10 (including both 4 and 10) and 13: <code>1, 2, 4-10, 13</code></p>\n\t\t\t\t\t\t\t<p>Number of images: {this.state.checkboxValues.length}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName={\"pre \" + (this.state.isInputMaskValid ? \"\" : \"invalid\")}\n\t\t\t\t\t\t\tplaceholder=\"Your image mask...\"\n\t\t\t\t\t\t\texpand={true}\n\t\t\t\t\t\t\tonChange={e => this.onMaskInput(e)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</Tabs>\n\n\t\t\t</Modal>\n\t\t)\n\t}\n}","import \"./LoadingWindow.css\"\nimport React from \"react\";\nimport Modal from \"./Modal\";\n\nconst loadingTexts = [\n\t\"Bombing the Earth to recreate your images\",\n\t\"Wasting your time\",\n\t\"Sending your images to the special agencies\",\n\t\"<- Shuffling pixels\",\n\t\"Drinking beer\",\n\t\"Training war robots using your images\",\n\t\"Eating your RAM (really, check usage)\"\n]\n\ninterface LoadingWindowProps {\n\tisOpen: boolean,\n}\n\nexport default class LoadingWindow extends React.Component<{}, LoadingWindowProps> {\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisOpen: false\n\t\t}\n\t}\n\n\tshow () {\n\t\tthis.setState({isOpen: true})\n\t}\n\n\thide () {\n\t\tthis.setState({isOpen: false})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal isOpen={this.state.isOpen} enableOk={false} enableCancel={false}>\n\t\t\t\t<div className=\"display-row loading-row\">\n\t\t\t\t\t<div className=\"sk-cube-grid\">\n\t\t\t\t\t\t<div className=\"sk-cube sk-cube1\" />\n\t\t\t\t\t\t<div className=\"sk-cube sk-cube2\" />\n\t\t\t\t\t\t<div className=\"sk-cube sk-cube3\" />\n\t\t\t\t\t\t<div className=\"sk-cube sk-cube4\" />\n\t\t\t\t\t\t<div className=\"sk-cube sk-cube5\" />\n\t\t\t\t\t\t<div className=\"sk-cube sk-cube6\" />\n\t\t\t\t\t\t<div className=\"sk-cube sk-cube7\" />\n\t\t\t\t\t\t<div className=\"sk-cube sk-cube8\" />\n\t\t\t\t\t\t<div className=\"sk-cube sk-cube9\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"loading-text\">{loadingTexts[Math.round(Math.random() * (loadingTexts.length - 1))] + \", please, wait...\"}</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n}","import React from \"react\";\nimport Modal from \"./Modal\";\n\ninterface ConfirmRemovalWindowState {\n\tisOpen: boolean,\n\tfileName: string,\n\tonConfirm: (isYes: boolean) => void\n}\n\nexport default class ConfirmRemovalWindow extends React.Component<{}, ConfirmRemovalWindowState> {\n\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t\tfileName: \"\",\n\t\t\tonConfirm: () => {}\n\t\t}\n\t}\n\n\tconfirm = (fileName: string, onConfirm: (isYes: boolean) => void) => {\n\t\tthis.setState({isOpen: true, fileName, onConfirm});\n\t}\n\n\tprivate onClick = (isYes: boolean) => {\n\t\tthis.setState({isOpen: false});\n\t\tthis.state.onConfirm(isYes);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\theader={`Remove image \"${this.state.fileName}\"?`}\n\t\t\t\tokText=\"Yes\"\n\t\t\t\tcancelText=\"No\"\n\t\t\t\tisOpen={this.state.isOpen}\n\t\t\t\tsetIsOpen={(isOpen => this.setState({isOpen}))}\n\t\t\t\tonCancel={() => this.onClick(false)}\n\t\t\t\tonOk={() => this.onClick(true)}\n\t\t\t>\n\t\t\t\t<div>Are you sure you want to remove image \"${this.state.fileName}\"?</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n}","import \"./ReadingErrorWindow.sass\";\nimport React from \"react\";\nimport Modal from \"./Modal\";\n\ninterface ReadingErrorWindowState {\n\tfileErrors: React.ReactElement[],\n\tisOpen: boolean,\n}\n\n/**\n * Maps filename to reading error text\n */\nexport type ReadingErrors = {[fileName: string]: string}\n\nexport default class ReadingErrorWindow extends React.Component<{}, ReadingErrorWindowState>{\n\n\tconstructor (props: {}) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfileErrors: [],\n\t\t\tisOpen: false,\n\t\t}\n\t}\n\n\tshow = (fileErrors: ReadingErrors) => {\n\t\tlet newFileErrors = [];\n\t\tlet key = 0;\n\t\tfor (let id in fileErrors) {\n\t\t\tif (!fileErrors.hasOwnProperty(id))\n\t\t\t\tcontinue;\n\t\t\tnewFileErrors.push(\n\t\t\t\t<div className=\"error-item\" key={key}>\n\t\t\t\t\t<b>{id}:</b> <span className=\"error-item-description\">{fileErrors[id]}</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t\tkey++;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tfileErrors: newFileErrors,\n\t\t\tisOpen: true\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tisOpen={this.state.isOpen}\n\t\t\t\tsetIsOpen={(isOpen => this.setState({isOpen}))}\n\t\t\t\tenableCancel={false}\n\t\t\t\theader={\"Error reading files\"}\n\t\t\t>\n\t\t\t\t<p>Following errors have occurred while reading your files:</p>\n\t\t\t\t{this.state.fileErrors}\n\t\t\t</Modal>\n\t\t);\n\t}\n\n}","import React, {Fragment, useEffect, useRef} from \"react\";\nimport * as Cesium from \"cesium\";\nimport {Viewer, CesiumComponentRef} from \"resium\";\nimport Menu from \"./components/Menu\";\nimport ReactDOM from \"react-dom\";\nimport manager from \"./etc/GeoTIFFManager\";\nimport About from \"./components/About\";\nimport {ModalImagesSelector} from \"./components/ModalImagesSelector\";\nimport LoadingWindow from \"./components/LoadingWindow\";\nimport ConfirmRemovalWindow from \"./components/ConfirmRemovalWindow\";\nimport ReadingErrorWindow from \"./components/ReadingErrorWindow\";\n\n// Only default datasets here. Just get your own token, duh.\nCesium.Ion.defaultAccessToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJmYzU3YTBlOS0yMDQ2LTQwYmYtODgyMy0xNDE3NTk5MjI5ODIiLCJpZCI6NjkyOTUsImlhdCI6MTYzMzM3NTA2MH0.DLePjLG_HAwKijwBbkQ18JFblYzTneLFGm94E8xN6Po\";\n\nconst dummyContainer = document.createElement(\"div\");\n\nfunction App() {\n\tlet cesiumRef = useRef<CesiumComponentRef<Cesium.Viewer>>(null);\n\tlet imageSelector = useRef<ModalImagesSelector>(null);\n\tlet loadingWindow = useRef<LoadingWindow>(null);\n\tlet confirmWindow = useRef<ConfirmRemovalWindow>(null);\n\tlet errorWindow = useRef<ReadingErrorWindow>(null);\n\n\tuseEffect(() => {\n\t\tif (!cesiumRef?.current?.cesiumElement)\n\t\t\treturn;\n\n\t\tconst viewer = cesiumRef.current.cesiumElement;\n\n\t\tmanager.viewer = viewer;\n\t\tmanager.imageSelector = imageSelector.current;\n\t\tmanager.loadingWindow = loadingWindow.current;\n\n\t\t// Fix camera behavior\n\t\tconst globe = viewer.scene.globe,\n\t\t\tcamera = viewer.scene.camera;\n\n\t\tlet scratchNormal = new Cesium.Cartesian3(),\n\t\t\tpreviousPosition = new Cesium.Cartesian3(),\n\t\t\tpreviousDirection = new Cesium.Cartesian3(),\n\t\t\tpreviousUp = new Cesium.Cartesian3(),\n\t\t\tpreviousRight = new Cesium.Cartesian3();\n\n\t\tviewer.scene.postUpdate.addEventListener(function () {\n\t\t\tlet normal = globe.ellipsoid.geodeticSurfaceNormal(\n\t\t\t\tcamera.position,\n\t\t\t\tscratchNormal\n\t\t\t);\n\n\t\t\tlet dotProduct = Cesium.Cartesian3.dot(camera.direction, normal);\n\n\t\t\tif (dotProduct >= -0.3) {\n\t\t\t\tcamera.position = Cesium.Cartesian3.clone(previousPosition, camera.position);\n\t\t\t\tcamera.direction = Cesium.Cartesian3.clone(previousDirection, camera.direction);\n\t\t\t\tcamera.up = Cesium.Cartesian3.clone(previousUp, camera.up);\n\t\t\t\tcamera.right = Cesium.Cartesian3.clone(previousRight, camera.right);\n\t\t\t} else {\n\t\t\t\tpreviousPosition = Cesium.Cartesian3.clone(camera.position, previousPosition);\n\t\t\t\tpreviousDirection = Cesium.Cartesian3.clone(camera.direction, previousDirection);\n\t\t\t\tpreviousUp = Cesium.Cartesian3.clone(camera.up, previousUp);\n\t\t\t\tpreviousRight = Cesium.Cartesian3.clone(camera.right, previousRight);\n\t\t\t}\n\t\t});\n\n\t\t// Add menu\n\t\tlet toolbar = viewer.container.getElementsByClassName(\"cesium-viewer-toolbar\")[0];\n\t\tlet menuContainer = document.createElement(\"div\");\n\t\tmenuContainer.className = \"menu-container\";\n\t\ttoolbar.appendChild(menuContainer);\n\t\tlet menu = React.createElement(Menu, {\n\t\t\tconfirmWindow: confirmWindow.current as ConfirmRemovalWindow,\n\t\t\terrorWindow: errorWindow.current as ReadingErrorWindow,\n\t\t});\n\t\tReactDOM.render(menu, menuContainer);\n\n\t\t// Add about section\n\t\tlet containerNames = [\"cesium-click-navigation-help\", \"cesium-touch-navigation-help\"];\n\t\tfor (let name of containerNames) {\n\t\t\tlet helpContainer = toolbar.getElementsByClassName(name)[0];\n\t\t\tlet aboutWrapper = document.createElement(\"div\");\n\t\t\taboutWrapper.className = \"about-wrapper\";\n\t\t\tlet about = React.createElement(About);\n\t\t\thelpContainer.appendChild(aboutWrapper);\n\t\t\tReactDOM.render(about, aboutWrapper);\n\t\t}\n\n\t\t// Add grid\n\t\tif (process.env.NODE_ENV !== \"production\")\n\t\t\tviewer.scene.imageryLayers.addImageryProvider(new Cesium.TileCoordinatesImageryProvider({}));\n\n\t}, [cesiumRef, imageSelector, loadingWindow, confirmWindow, errorWindow])\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Viewer full ref={cesiumRef} terrainProvider={manager.terrainProvider as any} timeline={false} sceneModePicker={false} animation={false} creditContainer={dummyContainer} terrainProviderViewModels={[]} />\n\t\t\t<ModalImagesSelector ref={imageSelector}/>\n\t\t\t<LoadingWindow ref={loadingWindow}/>\n\t\t\t<ConfirmRemovalWindow ref={confirmWindow}/>\n\t\t\t<ReadingErrorWindow ref={errorWindow}/>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\"No internet connection found. App is running in offline mode.\");\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}","import \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.sass\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\n// Detect user browser\nconst ua = window.navigator.userAgent.toLowerCase(),\n\tmobiles = [\"android\", \"iphone\", \"ipod\", \"opera mini\", \"windows phone\", \"bb\", \"blackberry\", \"tablet\", \"ipad\", \"playbook\", \"silk\"];\nlet isMobile = false;\nfor (let device of mobiles) {\n\tif (ua.indexOf(device) !== -1) {\n\t\tisMobile = true;\n\t\tbreak;\n\t}\n}\ndocument.body.classList.add(isMobile ? \"mobile\" : \"not-mobile\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}